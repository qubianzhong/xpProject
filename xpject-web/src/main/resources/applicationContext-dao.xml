<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-4.0.xsd
http://www.springframework.org/schema/jee 
http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">

	<!-- 扫描数据源配置文件 -->
	<context:property-placeholder location="classpath:*.properties"/>
	<!-- 一、数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!-- 数据库基本信息配置 -->  
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		
		 <!-- 最大并发连接数 -->  
         <!-- <property name="maxActive" value="${maxActive}" />   -->
         <!-- 初始化连接数量 -->  
         <!-- <property name="initialSize" value="${initialSize}" />   -->
         <!-- 配置获取连接等待超时的时间 -->  
         <!-- <property name="maxWait" value="${maxWait}" />   -->
         <!-- 最小空闲连接数 -->  
         <!-- <property name="minIdle" value="${minIdle}" />     -->
         <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
         <!-- <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />   -->
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
         <!-- <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />    
         <property name="validationQuery" value="${validationQuery}" />    
         <property name="testWhileIdle" value="${testWhileIdle}" />    
         <property name="testOnBorrow" value="${testOnBorrow}" />    
         <property name="testOnReturn" value="${testOnReturn}" />    
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />   -->
         <!-- 打开removeAbandoned功能 -->  
         <!-- <property name="removeAbandoned" value="${removeAbandoned}" />   -->
         <!-- 1800秒，也就是30分钟 -->  
         <!-- <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />   -->
         <!-- 关闭abanded连接时输出错误日志 -->     
         <!-- <property name="logAbandoned" value="${logAbandoned}" />   -->
	</bean>
	<!-- 二、sqlSessionFactory工厂，生产sqlSession -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		配置别名
		<property name="typeAliasesPackage" value="com.shunyu.entity.**"></property>
		加载mybatis配置文件:SqlMapConfig.xml
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
	</bean>
	三、接口批量扫描
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shunyu.dao.core.video.api"></property>
		
			1、延迟加载sqlSessionFactory
			2、多数据库实例（每一个数据库都有一个工厂），指定数据工厂
		
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> -->
	
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" >
			<bean  class="org.mybatis.spring.SqlSessionFactoryBean">
				<property name="dataSource" ref="dataSource"></property>
				<!-- <property name="typeAliasesPackage" value="com.shunyu.entity.**"></property> -->
				<!-- <property name="mapperLocations" value="classpath*:com/cxc/dao/core/**/*.xml"></property> -->
				<property name="mapperLocations" value="classpath*:com/xp/**/*Mapper.xml"></property>
				<!-- <property name="configLocation" value="classpath:sqlMapConfig.xml"></property> -->
			</bean>
		</constructor-arg>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xp.**.api"></property>
		<property name="sqlSessionTemplateBeanName"  value="sqlSessionTemplate"/> 
	</bean>
	
</beans>