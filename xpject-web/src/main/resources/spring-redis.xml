<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:p="http://www.springframework.org/schema/p"   
    xmlns:context="http://www.springframework.org/schema/context"   
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">    
 
    <!-- 加载Reids属性配置文件 -->  
	<!-- <context:property-placeholder  location="classpath:redis.properties" /> -->
    
    <bean id="propertyConfigurerRedis"  
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="order" value="1" />  
		<property name="ignoreUnresolvablePlaceholders" value="true" />  
		<property name="systemPropertiesMode" value="1" />  
		<property name="searchSystemEnvironment" value="true" />  
		<property name="locations">  
		<list>  
			<value>classpath*:/redis.properties</value>  
		</list>  
		</property>  
	</bean> 
    
    <!-- jedis pool配置 --> 
	<bean id="jedisPoolConfig"  
		class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxIdle" value="${redis.maxIdle}" />  
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />  
	</bean> 
     
    <!-- spring data redis -->  
	 <bean id="jedisConnectionFactory"  
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
		<property name="usePool" value="true"></property>  
		<property name="hostName" value="${redis.host}" />  
		<property name="port" value="${redis.port}" />  
		<property name="timeout" value="${redis.timeout}" />  
		<property name="database" value="${redis.default.db}"></property>  
		<constructor-arg index="0" ref="jedisPoolConfig" />  
	</bean>  
    
    <bean id="redisTemplate"  
        class="org.springframework.data.redis.core.StringRedisTemplate"  
        p:connectionFactory-ref="jedisConnectionFactory"
        p:keySerializer-ref="stringRedisSerializer">  
    </bean> 
	
	
    <!--这个主要是解决用cmd查看数据时为了显示正常-->  
	<bean id="stringRedisSerializer"  
	class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        
    <!--配置一个基础类（之后的业务类继承于该类）、将redisTemplate注入 -->
     <bean id="redisBase" abstract="true">  
        <property name="template" ref="redisTemplate"/>  
    </bean>  
    
    <!-- 自动扫描 ： 加载构建bean，以便通过注解方式注册bean -->  
    <context:component-scan base-package="com.redis" />
  
</beans>